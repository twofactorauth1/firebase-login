<!-- @import "partials/header.html" -->

<body>

<section>

  <!-- @import "partials/leftpanel.html" -->

  <div class="mainpanel">

    <!-- @import "partials/headerbar.html" -->
    <!-- @import "pages/edit_website.html" -->


  </div><!-- mainpanel -->

  <!-- @import "partials/rightpanel-website.html" -->

</section>

<!-- @import "partials/footer.html" -->

<!-- Mustache templates -->
<script id='image-section-template' type='text/x-mustache'>
  {{#images}}
  <div class="image-section {{class}}">
    <div class="image-wrap">
      <button class="run-functions-button">
        <span class="no-touch-label">Click</span>
        <span class="touch-label">Tap</span>
      </button>
      <img class="target-image" src="{{file}}" />
    </div>
    <div class="color-thief-output"></div>
  </div>
  {{/images}}
</script>

<script id="color-thief-output-template" type="text/x-mustache">
  <div class="function get-color">
    <h3 class="function-title">Dominant Color</h3>
    <div class="swatches">
      <div class="swatch" style="background-color: rgb({{color.0}}, {{color.1}}, {{color.2}})"></div>
    </div>
  </div>
  <div class="function get-palette">
    <h3 class="function-title">Palette</h3>
    <div class="function-output">
      <div class="swatches">
        {{#palette}}
          <div class="swatch" style="background-color: rgb({{0}}, {{1}}, {{2}})"></div>
        {{/palette}}
      </div>
    </div>
  </div>
</script>

<script type="text/javascript">
	function scrollToAnchor(aid){
    var aTag = $("#"+ aid);
    $('html,body').animate({scrollTop: aTag.offset().top},'slow');
}

  jQuery(document).ready(function() {
      //$('.menutoggle-right').trigger('click');

      $('#current-url').on('click', function() {
        if(!$('body').hasClass('chat-view')) {
          $('.menutoggle-right').trigger('click');
        }
          $('#rp-domain-tab').trigger('click');
      });

      $('.leftpanel .nav li.website-li').addClass('active');
      $('#nestable').nestable({'maxDepth': '2'});

      $('#launch-success').click(function(){
         $.gritter.add({
            title: 'This is a regular notice!',
            text: 'This will fade out after a certain amount of time.',
            class_name: 'growl-success',
           // sticky: false,
            time: ''
         });
          return false;
      });

      $('.dd-list, .navbar-nav').on('click', 'li', function() {
      	var section = $(this).data('section');
      	if ($('#'+section).length > 0) {
      		scrollToAnchor(section);
      	}
      });

      $('.section').hover(
       function(){ $('#nestable').find('.dd-list [data-section='+$(this).attr('id')+']').addClass('active'); },
       function(){ $('#nestable').find('.dd-list [data-section='+$(this).attr('id')+']').removeClass('active'); }
      );

      $(window).bind('scroll', function() {
         if ($(window).scrollTop() > 117) {
             $('#nestable-menu').addClass('fixed');
             //$('.theme-1').css('margin-top', '45px');
         } else {
             $('#nestable-menu').removeClass('fixed');
             //$('.theme-1').css('margin-top', '0px');
         }
       });

      var colorThief = new ColorThief();

  // Run Color Thief functions and display results below image.
  // We also log execution time of functions for display.
  var showColorsForImage = function($image, $imageSection ) {
    var image                    = $image[0];
    var start                    = Date.now();
    var color                    = colorThief.getColor(image);
    var elapsedTimeForGetColor   = Date.now() - start;
    var palette                  = colorThief.getPalette(image);
    var elapsedTimeForGetPalette = Date.now() - start + elapsedTimeForGetColor;

    var colorThiefOutput = {
      color: color,
      palette: palette,
      elapsedTimeForGetColor: elapsedTimeForGetColor,
      elapsedTimeForGetPalette: elapsedTimeForGetPalette
    };
    var colorThiefOuputHTML = Mustache.to_html($('#color-thief-output-template').html(), colorThiefOutput);
    $imageSection.addClass('with-color-thief-output');
    $imageSection.find('.run-functions-button').addClass('hide');
    $imageSection.find('.color-thief-output').append(colorThiefOuputHTML).slideDown();

    // If the color-thief-output div is not in the viewport or cut off, scroll down.
    var windowHeight          = $(window).height();
    var currentScrollPosition = $('body').scrollTop()
    var outputOffsetTop       = $imageSection.find('.color-thief-output').offset().top
    if ((currentScrollPosition < outputOffsetTop) && (currentScrollPosition + windowHeight - 250 < outputOffsetTop)) {
       $('body').animate({scrollTop: outputOffsetTop - windowHeight + 200 + "px"});
    }
  };

  // Drag'n'drop demo
  // Thanks to Nathan Spady (http://nspady.com/) who did the bulk of the drag'n'drop work.

  // Setup the drag and drop behavior if supported
  if (Modernizr.draganddrop && !!window.FileReader && !isMobile()) {

    $('#drag-drop').show();
    var $dropZone = $('#drop-zone');
    var handleDragEnter = function(event){
      $dropZone.addClass('dragging');
      return false;
    };
    var handleDragLeave = function(event){
      $dropZone.removeClass('dragging');
      return false;
    };
    var handleDragOver = function(event){
      return false;
    };
    var handleDrop = function(event){
      $dropZone.removeClass('dragging');
      handleFiles(event.originalEvent.dataTransfer.files);
      return false;
    };
    $dropZone
      .on('dragenter', handleDragEnter)
      .on('dragleave', handleDragLeave)
      .on('dragover', handleDragOver)
      .on('drop', handleDrop);
  }

  function handleFiles(files) {
    var $draggedImages = $('#dragged-images');
    var imageType      = /image.*/;
    var fileCount      = files.length;

    for (var i = 0; i < fileCount; i++) {
      var file = files[i];

      if (file.type.match(imageType)) {
        var reader = new FileReader();
        reader.onload = function(event) {
            imageInfo = { images: [
                {'class': 'dropped-image', file: event.target.result}
              ]};

            var imageSectionHTML = Mustache.to_html($('#image-section-template').html(), imageInfo);
            $draggedImages.prepend(imageSectionHTML);

            var $imageSection = $draggedImages.find('.image-section').first();
            var $image        = $('.dropped-image .target-image');

            // Must wait for image to load in DOM, not just load from FileReader
            $image.on('load', function() {
              showColorsForImage($image, $imageSection);
            });
          };
        reader.readAsDataURL(file);
      } else {
        alert('File must be a supported image type.');
      }
    }
  }

  // This is not good practice. :-P
  function isMobile(){
    // if we want a more complete list use this: http://detectmobilebrowsers.com/
    // str.test() is more efficent than str.match()
    // remember str.test is case sensitive
    var isMobile = (/iphone|ipod|ipad|android|ie|blackberry|fennec/).test
         (navigator.userAgent.toLowerCase());
    return isMobile;
  } 



    });
</script>
